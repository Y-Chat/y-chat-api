asyncapi: 2.5.0
info:
  title: Y-Chat Notification API
  version: 1.0.0
  description: |
    Y-Chat Notification API
defaultContentType: application/json
servers:
  dev:
    url: localhost:28092
    protocol: kafka
channels:
  notification-notification:
    publish:
      summary: Create new notification
      operationId: createNotification
      message:
        $ref: '#/components/messages/NotificationMessage'
    subscribe:
      summary: Received a new notification
      operationId: onNotification
      message:
        $ref: '#/components/messages/NotificationMessage'
components:
  messages:
    NotificationMessage:
      name: transactionMessage
      payload:
        $ref: '#/components/schemas/Notification'
  schemas:
    Notification:
      type: object
      properties:
        newMessage:
          type:  object
          required:
            - chatId
            - senderId
          properties:
            chatId:
              type: string
            senderId:
              type: string
        updatedMessage:
          type:  object
          required:
            - chatId
            - messageId
          properties:
            chatId:
              type: string
            messageId:
              type: string
        mediaUploaded:
          type:  object
          required:
            - chatId
            - messageId
            - mediaId
          properties:
            chatId:
              type: string
            messageId:
              type: string
            mediaId:
              type: string
        transactionComplete:
          type: object
          required:
            - chatId
            - messageId
            - transactionId
          properties:
            chatId:
              type: string
            messageId:
              type: string
            transactionId:
              type: string
        signalingNewOffer:
          type: object
          required:
            - callId
            - callerId
            - offer
          properties:
            callId:
              type: string
            calleeId:
              type: string
            callerId:
              type: string
            offer:
              $ref: '#/components/schemas/SignalingOffer'
        signalingNewAnswer:
          type: object
          required:
            - callId
            - calleeId
            - answer
          properties:
            callId:
              type: string
            calleeId:
              type: string
            callerId:
              type: string
            answer:
              $ref: '#/components/schemas/SignalingAnswer'
        signalingNewCandidate:
          type: object
          required:
            - callId
            - receiverId
            - candidate
          properties:
            callId:
              type: string
            receiverId:
              type: string
            candidate:
              $ref: '#/components/schemas/SignalingCandidate'
        callEnded:
          type: object
          required:
            - callId
            - receiverId
          properties:
            callId:
              type: string
            receiverId:
              type: string
    SignalingOffer:
      type: object
      required:
        - type
      properties:
        sdp:
          type: string
        type:
          type: string
    SignalingAnswer:
      type: object
      required:
        - type
      properties:
        sdp:
          type: string
        type:
          type: string
    SignalingCandidate:
      type: object
      properties:
        candidate:
          type: string
        sdpMLineIndex:
          type: number
        sdpMid:
          type: string
        usernameFragment:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string